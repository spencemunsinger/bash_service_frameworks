# config file for bash tools

# $YEAR and $environment MUST be set in scripts before this is sourced

# --------------------------------------------------------- #
# GENERAL
# --------------------------------------------------------- #

# check for inside lambda, if so, set home
if [ "${AWS_LAMBDA_RUNTIME_API}" ]; then
    export HOME="/tmp"
fi

EMAIL="devops@toasttab.com" # used as identifier for export of pgp keys and sftp key comment
NUMLABELS=16 # number of staging labels to keep in a secret

# --------------------------------------------------------- #
# CHASE SFTP SERVER
# --------------------------------------------------------- #

CHASE_PROD_SFTP='TOAST@transmissions.jpmorgan.com'
CHASE_UAT_SFTP='TOAST@transmissions-uat.jpmorgan.com'

# testing purposes #
CHASE_TEST_SFTP='ubuntu@10.4.0.147' # for using test instance of sftp server

# --------------------------------------------------------- #
# LOCAL DIRECTORIES
# --------------------------------------------------------- #

# files directory
SFTP_DIR="${HOME}/tmp_${YEAR}-${environment}-sftp"
# pgp working directory, this is set as GNUPGHOME
PGP_DIR="${HOME}/tmp_${YEAR}-${environment}-pgp"
# transport directory
TRANSPORT_DIR="${HOME}/tmp_${YEAR}-${environment}-transport"
# LOGDIR
LOGDIR="${HOME}/tmp_${YEAR}-${environment}-logs"
# activate directory. Placeholder for activate file to be held separately from other transmits. This is a safety feature.
ACTIVATE_DIR="${HOME}/tmp_${YEAR}-${environment}-activate"
ACTIVATE_FILE="TOAST.ACTIVATE.IN.DAT"

# --------------------------------------------------------- #
# UPLOAD TO CHASE FILENAMES AND VARIABLES
# --------------------------------------------------------- #

# sftp options string
SFTP_OPTIONS='-oHostKeyAlgorithms=+ssh-rsa -oPubkeyAcceptedKeyTypes=+ssh-rsa'

# Chase current SFTP private key for authentication
CHASE_SFTP_PRIVATE_KEY="${SFTP_DIR}/Chase_Current_SFTP_Private.key"
# Chase SFTP Host Key
CHASE_SFTP_HOST_KEY="${SFTP_DIR}/Chase_SFTP_Host.key"

# from https://www.jpmorgan.com/payments/client-resource-center/h2h/partner-key-management-overview

# <Partner ID>.TRANSPORT.IN.DAT (for SSH or SSL keys)
SFTP_SIGNED_PUBKEY_FILE_NAME="TOAST.TRANSPORT.IN.DAT"
# <Partner ID>.PAYLOAD.IN.DAT (for PGP keys)
PGP_SIGNED_PUBKEY_FILE_NAME="TOAST.PAYLOAD.IN.DAT"

# pgp activate xml file 
CHASE_PGP_ACTIVATE_FILE="${ACTIVATE_DIR}/${ACTIVATE_FILE}"
CHASE_PGP_ACTIVATE_FILE_TEMPLATE="TOAST.ACTIVATE.IN.DAT.template.xml"
CHASE_PGP_ACTIVATE_FILE_SMPATH="${toastEnvironment}/rsaKey/chasepgp-activate"

# --------------------------------------------------------- #
# SFTP keys
# --------------------------------------------------------- #

# SECRETSMANAGER PATHS

# CURRENT aws secretsmanager current chase locations - these will be obsoleted...
# SFTP_SECRET_KEY_SMPATH="${toastEnvironment}/rsaKey/chasesftp"
# SFTP_PUBLIC_KEY_SMPATH="${toastEnvironment}/rsaKey/chasesftp-pub"

# CLEAR & FUTURE (to be used once payments repoints to new locations)
SFTP_SECRET_KEY_SMPATH="${toastEnvironment}/rsaKey/chasesftp-secret"
SFTP_PUBLIC_KEY_SMPATH="${toastEnvironment}/rsaKey/chasesftp-public"

# CHASE HOST KEY
CHASE_SFTP_HOST_KEY_SMPATH="${toastEnvironment}/rsaKey/chasesftp-host"

# NAMING FOR KEYS (used in createSftpKeyPair())
SFTP_SECRET_KEY="${YEAR}-${environment}-chasesftp"
# sftp public key
SFTP_PUBLIC_KEY="${YEAR}-${environment}-chasesftp.pub"

# --------------------------------------------------------- #
# PGP keys
# --------------------------------------------------------- #

# PGP CONFIG FILE
PGP_CONFIG_FILE="create_keys_functions_pgp_keys.conf"
PGP_AGENT_CONF="gpg-agent.conf"

# PGP KEY
PGP_PUBLIC_KEY="${YEAR}-${environment}-chasepgp.pub"
EMAIL="devops@toasttab.com" # used as identifier for export of pgp keys

# CURRENT SECRETSMANAGER PGP LOCATIONS - these will be obsoleted...
# PGP_SECRET_KEY_SMPATH="${toastEnvironment}/rsaKey/chase-signing-pgp"
# PGP_PUBLIC_KEY_SMPATH="${toastEnvironment}/rsaKey/chase-signing-pgp-pub"

# FUTURE SECRETSMANAGER PGP LOCATIONS (to be moved to once payments repoints...)
PGP_SECRET_KEY_SMPATH="${toastEnvironment}/rsaKey/chasepgp-secret"
PGP_PUBLIC_KEY_SMPATH="${toastEnvironment}/rsaKey/chasepgp-public"

IMDS_URL="http://169.254.169.254"
METADATA_RESPONSE=$(curl -o /dev/null -s -w "%{http_code}" ${IMDS_URL}/latest/meta-data/)
if [ "${METADATA_RESPONSE}" -eq 401 ]; then
    #echo "IMDSv2 is enabled, getting token"
    IMDS_TOKEN=$(curl -s -X PUT ${IMDS_URL}/latest/api/token -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
    REGION_JSON=$(curl -s -H "X-aws-ec2-metadata-token: $IMDS_TOKEN" ${IMDS_URL}/latest/dynamic/instance-identity/document)
    export AWS_DEFAULT_REGION=$(echo $REGION_JSON | jq -r .region)
    #echo "AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}"
elif [ "${METADATA_RESPONSE}" -eq 200 ]; then
    #echo "IMDSv1 is enabled"
    REGION_JSON=$(curl -s ${IMDS_URL}/latest/dynamic/instance-identity/document)
    export AWS_DEFAULT_REGION=$(echo $REGION_JSON | jq -r .region)
    #echo "AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}"
else
    #echo "IMDS is not available"
    export AWS_DEFAULT_REGION="us-east-1"
fi
